// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"github.com/allanmaral/go-expert/20-clean-arch/internal/entity"
	"github.com/allanmaral/go-expert/20-clean-arch/internal/infra/database"
	"github.com/allanmaral/go-expert/20-clean-arch/internal/infra/eventhandlers"
	"github.com/allanmaral/go-expert/20-clean-arch/internal/infra/web"
	"github.com/allanmaral/go-expert/20-clean-arch/internal/usecase"
	"github.com/allanmaral/go-expert/20-clean-arch/pkg/events"
	"github.com/google/wire"
)

// Injectors from wire.go:

func NewCreateOrderUseCase(db *sql.DB, eventDispatcher events.EventDispatcher) *usecase.CreateOrderUseCase {
	orderRepositorySQL := database.NewOrderRepository(db)
	orderCreatedEvent := eventhandlers.NewOrderCreatedEvent()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepositorySQL, orderCreatedEvent, eventDispatcher)
	return createOrderUseCase
}

func NewOrderHandlerWeb(db *sql.DB, eventDispatcher events.EventDispatcher) *web.OrderHandlerWeb {
	orderRepositorySQL := database.NewOrderRepository(db)
	orderCreatedEvent := eventhandlers.NewOrderCreatedEvent()
	createOrderUseCase := usecase.NewCreateOrderUseCase(orderRepositorySQL, orderCreatedEvent, eventDispatcher)
	orderHandlerWeb := web.NewOrderHandlerWeb(createOrderUseCase)
	return orderHandlerWeb
}

// wire.go:

var setOrderRepositoryDependency = wire.NewSet(database.NewOrderRepository, wire.Bind(new(entity.OrderRepository), new(*database.OrderRepositorySQL)))

var setOrderCreatedEvent = wire.NewSet(eventhandlers.NewOrderCreatedEvent, wire.Bind(new(events.Event), new(*eventhandlers.OrderCreatedEvent)))

var setCreateOrderUseCase = wire.NewSet(
	setOrderRepositoryDependency,
	setOrderCreatedEvent, usecase.NewCreateOrderUseCase,
)
